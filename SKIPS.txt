2016-12-01        Yu-Jie Lin       Public Domain | UNLICENSE        ----------


                                    SKIPS


                                 DESCRIPTION


This file notes projects that I like but not suitable to fit into my channel.
They are kept in following sections, newest first, with my thoughts and
noting date. I may or may not have actually use them.


                                Zombies on Ice

                Arcade game for Ludum Dare 37 Compo submission

        Egon Elbre / Go / Windows, Linux, Mac OS X / MIT or UNLICENSE

                             2016-12-13T12:50:08Z


Shoulda been "Relatives on Ice" for family gathering on holidays, if only you 
can swap zombies with your relatives to smack with gigantic hammer, this would 
be a more popular.


                                   GOvatar

                          Pixelated avatar generator

                     By Oleg Lobanov / In Go / Under MIT

                             2016-12-13T05:45:31Z


GOvatar [1] generates male or female avatar, big head with shaded background.

[1] https://github.com/o1egl/govatar


                                   binstale

                       Go binaries stale or up-to-date

                   By Dmitri Shuralyov / In Go / Under MIT

                             2016-12-12T02:35:44Z


               binstale [1] checks if binaries are up to date.

                   [1] https://github.com/shurcooL/binstale



                                     khal

                           CLI calendar application

          By Christian Geier, et al / In Python 3 / Under Expat/MIT

                             2016-12-11T23:42:44Z

khal [1] looks pretty good, colors, event lists. 

[1] https://github.com/pimutils/khal https://lostpackets.de/khal/


                      fs-bs (forward-slash, back-slash)

                    experimental console-based art script

                       By Blieque Mariguan / Under MIT

                             2016-12-07T04:03:10Z


An interesting tiny script, fs-bs [1], it is kind of like

    A='\/'; for ((i=0;i<COLUMNS*LINES;i++)); do echo -n ${A:RANDOM%2:1}; done

[1] https://github.com/blieque/fs-bs

Only more colorful and a bit different. However, it's unnecessarily requiring 
more dependencies:

1. Terminess Breathe [1] (a bitmap font) and
2. 24-bit color supported terminals.

[1] https://github.com/blieque/terminess-breathe

The screenshot [1] doesn't look as if it needs true color, more like a 
256-color to me, perhaps it's taken with 24-bit-emulated terminal emulator.

[1] https://github.com/blieque/fs-bs/blob/1c7829e/examples.png


                             Floating Point Hacks

            Computing some floating points using 8th grade algebra

                         By Lee Gao / C++ / Under MIT

                             2016-12-10T05:01:55Z

floathacks [1] does the computations using fast inverse root method [2]:

1. rational powers (x^{a/b}) to an arbitrary precision.
2. irrational powers (x%c) to within 10% relative error.
3. exp(x) to within 10% relative error.
4. log(x) to within 10% relative error.

[1] https://github.com/leegao/float-hacks
[2] https://en.wikipedia.org/wiki/Fast_inverse_square_root

You might want to read about this magic constant 0x5f3759df [1].

[1] http://www.bullshitmath.lol/FastRoot.slides.html



                                  shellfuncs

      Import and execution of shell script functions from Python script

                          By Timo Furrer / Under MIT

                             2016-12-03T00:55:20Z


Why would anyone do that? The author of shellfuncs [1] gives three reasons:

- use existing shell scripts in a pythonic way
- complex piping stuff might be easier to implement in shell script
- testing shell scripts is a pain in the a** - with Python it'll be easier

[1] https://github.com/timofurrer/shellfuncs

I can't say that those are good reasons when you somehow want to mix Python 
and shell scripts. It's the same as mixing Python with any other languages 
requiring an interpretor.

Anyway, it's still amazing to see that you can do that just because you can do 
that like this:

  import shellfuncs

  from roulettes import russian_roulette

  returncode, stdout, stderr = russian_roulette()

Where `roulettes` actually is a shell script (roulettes.sh) and 
`russian_roulette` is a shell function from the shell script.


                            NeOleo (GNU Oleo fork)

            Lightweight curses/Motif spreadsheet based on GNU oleo

                By Mark Carter (blippy, forker) / Under GPLv2

                             2016-12-01T03:11:04Z


NeOleo [1] is a fork of GNU Oleo [2], which was last released in 2001 (Version
1.99.16). The most apparent difference between Oleo and other spreadsheet
programs is the cell references, which are in the format of `R#C#`, clearly short for "Row" and "Column."

[1] https://github.com/blippy/neoleo
[2] https://en.wikipedia.org/wiki/GNU_Oleo

It has different parsing patterns for the cell contents, it's required to
quote the text content seemingly. Oleo is quite unusual to users who are used
to Excel-like spreadsheet. And there seems to be a concept of programming [1]
by the use of cells.

[1] http://www.delorie.com/gnu/docs/oleo/oleo_77.html

As for NeOleo, its latest version is 3.0.1 (2016-11-29), supporting ncurses
and Motif+Xbae (grid widget) interfaces.
